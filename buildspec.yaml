version: 0.2

phases:
  install:
    commands:
      - echo Installing app dependencies...
      - curl -LO https://dl.k8s.io/release/v1.27.2/bin/linux/amd64/kubectl   
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
      - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      - source ~/.bashrc
      - echo 'Check kubectl version'
      - kubectl version --short --client
      # Install Helm
      - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
      - chmod +x get_helm.sh
      - ./get_helm.sh
      #Hadolint installation 
      -  echo "Downloading the Hadolint tool..."
      -  wget -O hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64
      -  sudo cp hadolint /usr/local/bin/hadolint
      -  sudo chmod +x /usr/local/bin/hadolint
      -  hadolint --version

      # eksctl installation 
      - ARCH=amd64
      - PLATFORM=$(uname -s)_$ARCH
      - curl -sLO "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_$PLATFORM.tar.gz"
      - curl -sL "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_checksums.txt" | grep $PLATFORM | sha256sum --check
      - tar -xzf eksctl_$PLATFORM.tar.gz -C /tmp && rm eksctl_$PLATFORM.tar.gz
      - sudo mv /tmp/eksctl /usr/local/bin
      - eksctl version
    
  pre_build:
    commands:
      - echo $DOCKER_LOGIN_TOKEN | docker login --username ankitanagarale  --password-stdin
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 581355710136.dkr.ecr.us-east-2.amazonaws.com
      - IMAGE_REPO_NAME=581355710136.dkr.ecr.us-east-2.amazonaws.com/canary-ecr
      - IMAGE_TAG=v1.0.0.RELEASE
      

  build:
    commands:
    # validating Dockerfile using Hadolint 
      - echo "Validating the Dockerfile using Hadolint tool..."
     # - hadolint --config hadolint.yml Dockerfile 2>&1 | tee hadolint.log
      - docker run --rm -i -v ${PWD}/.hadolint.yml:/.hadolint.yaml hadolint/hadolint:v1.16.2 hadolint -f json - < ./Dockerfile
      - echo Build started on `date`
    # building docker image   
      - echo Building the Docker image...          
      - docker build --tag $IMAGE_REPO_NAME:$IMAGE_TAG .
 
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Push the latest image to cluster
      # - echo "Setting Environment Variables related to AWS CLI for Kube Config Setup"          
      # - CREDENTIALS="$(aws sts assume-role --role-arn $EKS_KUBECTL_ROLE_ARN --role-session-name codebuild-kubectl --duration-seconds 900)"
      # - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
      # - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      # - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
      # - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
      # - echo "Update Kube Config"      
      # - aws eks update-kubeconfig --name $EKS_CLUSTER_NAME
      # - kubectl apply -f deployment.yaml
      # - kubectl get all 
      # - kubectl get pods
      # - kubectl get svc
      # - sleep 60 
      # - kubectl get all 

      
artifacts:
  files:
    - hadolint.log
  
